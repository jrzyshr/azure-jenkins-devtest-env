#! /bin/bash

# az login
# az account set --subscription {subscription-id}

# Variables
resourceGroupName="dtARMTest2"
location="eastus2"
vNetName="jenkinsDevTest-VirtualNetwork"
jumpSubName="jumpbox-Subnet"
jenkinsSubName="jenkins-Subnet"

#Jumpbox Resources
jumpPubIPName="jumpbox-PIP"
jumpNSGName="jumpbox-NSG"
jumpNICName="jumpbox-NIC"
jumpboxVMName="win-jumpbox"
jumpboxAdminName="jumpboxadmin"
jumpboxAdminPassword="DevTestPa55W0rd!"
jumpboxDiagStorageAccount="jumpboxdiag1234" # needs to be a random number????

#Jenkins Master Resources
jenkinsNSGName="jenkins-NSG"
jenkinsNICName="jenkins-NIC"
jenkinsVMName="jenkins-master"
jenkinsAdminName="jenkinsadmin"
jenkinsAdminPassword="DevTestPa55W0rd!"
jenkinsDiagStorageAccount="jenkinsdiag1234" # needs to be a random number????

echo $resourceGroupName
echo $location

# Create Resource Group

# Create the resource group
echo "Check if resource group already exists"
resourcegroup=$(az group show --name $resourceGroupName)
if [[ $resourcegroup == {* ]]
then
  echo "Resource group already exists"
else
    echo "Creating resource group $resourceGroupName..."
    az group create -n $resourceGroupName -l $location -o table
    echo "Created resource group"
fi

    echo "Creating VNet $vNetName ..."
    # Deploy VNet & initial Subnet
    az network vnet create \
    --name $vNetName \
    --resource-group $resourceGroupName \
    --location $location \
    --address-prefix 10.0.0.0/16 \
    --subnet-name $jumpSubName \
    --subnet-prefix 10.0.1.0/24 \
    -o table
    echo "created the vnet!"
    
    echo "Creating jumpbox subnet..."
    # Deploy additional Subnet
    az network vnet subnet create \
    --address-prefix 10.0.2.0/24 \
    --name $jenkinsSubName \
    --resource-group $resourceGroupName \
    --vnet-name $vNetName \
    -o table
echo "jumpox subnet created"

# Deploy Windows JumpBox

# Create a public IP address.
echo "creating jumpbox PIP..."
az network public-ip create --resource-group $resourceGroupName --name $jumpPubIPName -o table
echo "created jumpbox PIP"

# Create a network security group.
echo "creating jumpbox NSG..."
az network nsg create --resource-group $resourceGroupName --name $jumpNSGName -o table
echo "created Jumpbox NSG"

# Open RDP on the Jumpbox NSG!!!
# echo "creating jumpbox NSG rule to allow rdp..."
# az network nsg rule create \
#   -g $resourceGroupName \
#   --nsg-name $jumpNSGName \
#   -n allowSSH \
#   --priority 100 \
#   --source-address-prefix * \
#   --source-port-range * \
#   --destination-address-prefix * \
#   --destination-port-range 3389 \
#   --access Allow \
#   --protocol Tcp \
#   --direction Inbound \
#   --description "Allow RDP on port 3389 from all inbound IPs."
# echo "created jumpbox NSG rule to allow rdp"

# Create a virtual network card and associate with public IP address and NSG.
echo "creating jumpbox NIC..."
az network nic create \
  --resource-group $resourceGroupName \
  --name $jumpNICName \
  --vnet-name $vNetName \
  --subnet $jumpSubName \
  --network-security-group $jumpNSGName \
  --public-ip-address $jumpPubIPName \
  -o table
echo "created Jumpbox NIC"

# Create storage account for the Jumpbox VM
echo "create jumpbox diag storage account"

# if check?
az storage account check-name --name $jumpboxDiagStorageAccount -o table
az storage account create -n $jumpboxDiagStorageAccount -g $resourceGroupName -l $location --sku Standard_LRS -o table
echo "created jumpbox diag storage account"

# Create Windows Jumpbox VM
# TODO: add a check if VM exists and don't create if it does?'
echo "creating jumpbox VM..."
az vm create \
    --resource-group $resourceGroupName \
    --name $jumpboxVMName \
    --location $location \
    --nics $jumpNICName \
    --image win2016datacenter \
    --size Standard_DS1_v2 \
    --storage-sku Standard_LRS \
    --admin-username $jumpboxAdminName \
    --admin-password $jumpboxAdminPassword \
    -o table

echo "created jumpbox VM"

# enable boot diagnostics
echo "enabling boot diagnostics for $jumpboxVMName..."
az vm boot-diagnostics enable --storage $jumpboxDiagStorageAccount -n $jumpboxVMName -g $resourceGroupName -o table
echo "boot diagnostics enabled for $jumpboxVMName"

# Open port 3389 to allow RDP traffic to host.
# This appears to be opened by default on Windows VM???
echo "opening jumpbox port for RDP..."
az vm open-port --port 3389 --resource-group $resourceGroupName --name $jumpboxVMName -o table
echo "jumpbox rdp port opened"

# TODO: Run some DSC stuff to configure the Jumpbox by...
#  -installing Putty
#  -installing AzureCLI
#  -installing Azure PowerShell-Cmdlets
#  -disabling IE Enhanced Protection mode?

# Deploy Jenkins Master

# Create a network security group.
echo "creating Jenkins NSG..."
az network nsg create --resource-group $resourceGroupName --name $jenkinsNSGName -o table
echo "created Jenkins NSG"

# Open SSH on the NSG!!!
# echo "creating Jenkins NSG rule to allow ssh..."
# az network nsg rule create \
#   -g $resourceGroupName \
#   --nsg-name $jenkinsNSGName \
#   -n allowSSH \
#   --priority 100 \
#   --source-address-prefix * \
#   --source-port-range * \
#   --destination-address-prefix * \
#   --destination-port-range 22 \
#   --access Allow \
#   --protocol Tcp \
#   --direction Inbound \
#   --description "Allow SSH on port 22 from all inbound IPs."
# echo "created Jenkins NSG rule to allow ssh"



# Create a virtual network card and associate with public IP address and NSG.
echo "creating Jenkins NIC..."
az network nic create \
  --resource-group $resourceGroupName \
  --name $jenkinsNICName \
  --vnet-name $vNetName \
  --subnet $jenkinsSubName \
  --network-security-group $jenkinsNSGName \
  --public-ip-address "" \
  -o table
echo "created Jenkins NIC"

# Create storage account for the Jumpbox VM
echo "create Jenkins diag storage account"

# if check?
az storage account check-name --name $jenkinsDiagStorageAccount -o table
az storage account create -n $jenkinsDiagStorageAccount -g $resourceGroupName -l $location --sku Standard_LRS -o table
echo "created Jenkins diag storage account"

# Create Linux Jenkins Master VM
# TODO: add a check if VM exists and don't create if it does?'
echo "creating Jenkins master VM..."
az vm create \
    --resource-group $resourceGroupName \
    --name $jenkinsVMName \
    --location $location \
    --nics $jenkinsNICName \
    --image Bitnami:jenkins:1-650:2.46.20 \
    --size Standard_DS2_v2 \
    --storage-sku Standard_LRS \
    --authentication-type password \
    --admin-username $jenkinsAdminName \
    --admin-password $jenkinsAdminPassword \
    -o table

echo "created Jenkins VM"

# enable boot diagnostics
echo "enabling boot diagnostics for $jenkinsVMName..."
az vm boot-diagnostics enable --storage $jenkinsDiagStorageAccount -n $jenkinsVMName -g $resourceGroupName -o table
echo "boot diagnostics enabled for $jenkinsVMName"

# OR TRY THIS
echo "opening port 22 on $jenkinsVMName..."
az vm open-port --port 22 --resource-group $resourceGroupName --name $jenkinsVMName -o table
echo "opened port 22 on $jenkinsVMName"


# Execute DSC on Jenkins Master??

# Create & Apply NSGs to Subnets

